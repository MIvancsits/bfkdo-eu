@page "/evaluator/station/{Id:int}"
@using Common.Enums;
@using Common.Model;

<MudStack Spacing="4">
    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center" Class="my-4" Spacing="4">
        <h1 class="m-0" aria-label="Testbezeichnung">Deine Station: <br> @Stationen.CriteriaName</h1>
        <MudTooltip Text="Diese Funktion ist noch nicht verfügbar"><MudButton aria-label="Bearbeiten" Color="Color.Primary" Variant="Variant.Filled" Disabled="true" Style="border-radius: 20px; padding-left:20px; padding-right:20px;">Station wechseln</MudButton></MudTooltip>
    </MudStack>
    </MudStack>
    <hr />

    <MudDataGrid Items="@_data" T="ModelEvaluatorGrade">
    <Columns>
        <TemplateColumn Filterable="false" CellStyle="width:20px" HeaderStyle="width:20px">
            <CellTemplate>
                <MudStack Row>
                    @{
                        var data = context.Item;
                    }
                    <MudIcon Style="border:3px solid black; border-radius:50%" Icon="@Icons.Material.Filled.Person" Title="Personen Icon" />
                    <h5>@data.ParticipantName</h5>
                    <h6>@data.GradeId</h6>
                    <h6>@data.Grade</h6>

                    <MudButton Color="Color.Success"
                               Variant="Variant.Filled"
                               Disabled="@(data.Grade == EnumEvaluation.Passed)"
                               OnClick="async () => await Grade(data.GradeId, EnumEvaluation.Passed)">Bestanden</MudButton>

                    <MudButton Color="Color.Error"
                               Variant="Variant.Filled"
                               Disabled="@(data.Grade == EnumEvaluation.Failed)"
                               OnClick="async () => await Grade(data.GradeId, EnumEvaluation.Failed)">Nicht bestanden</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>